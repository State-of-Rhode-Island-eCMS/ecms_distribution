# Ansible variables for use with Oomph CI/CD actions
---
# Save build artifacts
archive_build: yes

# Disable non-Lando Composer and NPM
install_composer: no
run_composer_install: no
run_npm_install: no

# Use Lando for build process
use_lando: yes
run_lando_composer_install: no
lando_version: "v3.18.0"
# Disable the standard Oomph lando npm install.
run_lando_npm_install: no

# Use pre-installed Docker EE
lando_install_prereqs: no
lando_docker_ce: no

# Append the hooks directory to the deploy files variable.
drupal_deploy_files:
  - composer.json
  - composer.lock
  - docroot
  - factory-hooks
  - hooks
  - vendor

# Run the ACSF init commands to prepare for Site Factory.
extra_build_commands:
  # Ensure the profile installs.
  - "lando drush -y site-install ecms_acquia"
  - "lando gulp validate"
  - "lando phpcs"
  # Comment out PHPUnit testing suite until D10 compatibility is sorted out.
#  - "lando xdebug-on"
#  - "lando phpunit"
#  - "lando xdebug-off"
  # Un-comment previous section after D10-compatible PHPUnit upgrade is available.
  # After running validation/tests, remove dev dependencies
  - "lando npm install --only=production"
  - "lando composer install --optimize-autoloader --no-dev --no-ansi --no-interaction --no-progress"
  # Configure the codebase for Acquia Site Factory
  - "lando acsf-init"
  - "lando acsf-init-verify"

# Use docroot instead of web for Acquia.
drupal_docroot: "{{ drupal_deploy_dest }}/docroot"

# Acquia deployment.
# You must define the following variables in your project variables file:
acquia_repo_name: "riecms.git"
acquia_repo_hostname: "svn-2398.enterprise-g1.hosting.acquia.com"
acquia_repo_user: "riecms"

# You may define these optional variables in your project variables file:
acquia_force_push: yes
acquia_deploy_build_artifact: yes
#   acquia_deploy_build_artifact_files (default: "{{ drupal_deploy_files }}")
#   acquia_deploy_build_artifact_msg (default: "Oomph Actions automated build and commit process")
