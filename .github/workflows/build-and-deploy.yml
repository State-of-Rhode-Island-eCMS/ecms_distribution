# Builds Drupal and deploys to Acquia.
---
name: Build and Deploy
on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  PHP_VERSION: '8.1'
  PHP_EXTENSIONS: 'gd, curl, mbstring, mysqli, opcache, xml, zip, apcu'
  PHP_TOOLS: 'composer'
  NODE_VERSION: '10.x'

jobs:
  test:
    name: Test Drupal
    runs-on: ubuntu-latest
    services:
      database:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          tools: ${{ env.PHP_TOOLS }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Prepare access to the profile repository
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ECMS_PROFILE_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress

      - name: Install Node dependencies
        run: npm ci --no-fund --no-progress

      - name: Install Drupal
        run: php vendor/bin/drush site-install --existing-config --yes ecms_acquia

      # Comment out PHPUnit testing suite until D10 compatibility is sorted out
      # - name: Run PHPUnit tests
      #   run: composer test:php

      - name: Run PHPCS tests
        run: composer validate:php

      # PHPStan was not active in Ansible-based CI; commenting out for now
      # - name: Run PHPStan tests
      #   run: php vendor/bin/phpstan analyze

  build:
    name: Build Drupal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          tools: ${{ env.PHP_TOOLS }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Prepare access to the profile repository
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ECMS_PROFILE_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Set ephemeral encryption key
        run: echo -e  "ENCRYPTION_PRIVATE_KEY=$(dd if=/dev/urandom bs=32 count=1 | base64 -i -)" >> $GITHUB_ENV

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --no-dev

      - name: Install Gulp
        run: npm install --global gulp-cli

      - name: Install Node dependencies
        run: npm ci --no-fund --no-progress --production

      - name: Run Gulp
        run: gulp build

      - name: Validate Gulp
        run: gulp validate

      - name: Archive Drupal
        run: tar -czf drupal.tar.gz config vendor docroot composer.json composer.lock

      - name: Upload Drupal archive
        uses: actions/upload-artifact@v3
        with:
          name: drupal
          path: drupal.tar.gz
