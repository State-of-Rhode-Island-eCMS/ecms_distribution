diff --git a/src/Controller/MediaRevisionController.php b/src/Controller/MediaRevisionController.php
index e291dad8e80e8dc2c3e0b59e170d30c424d8b507..bd4b4beaa0c11d77f116a5eb9168d42e3e3fd753 100644
--- a/src/Controller/MediaRevisionController.php
+++ b/src/Controller/MediaRevisionController.php
@@ -82,6 +82,7 @@ class MediaRevisionController extends ControllerBase {
     $langname = $media->language()->getName();
     $languages = $media->getTranslationLanguages();
     $hasTranslations = (count($languages) > 1);
+    $hasFileField = ($media->hasField('field_file'));
 
     /** @var \Drupal\media\MediaStorage $mediaStorage */
     $mediaStorage = $this->entityTypeManager()->getStorage('media');
@@ -99,6 +100,7 @@ class MediaRevisionController extends ControllerBase {
     $build['#title'] = $title;
     $header = [
       $this->t('Revision'),
+      $this->t('File'),
       $this->t('Operations'),
     ];
 
@@ -139,6 +141,20 @@ class MediaRevisionController extends ControllerBase {
           $currentRevisionDisplayed = TRUE;
         }
 
+        // Is there a file to show?
+        $filename = '';
+        if ($hasFileField) {
+          if ($theFile = $revision->get('field_file'))
+            $fileArray = $theFile->getValue();
+            if (!empty($fileArray)) {
+              /** @var \Drupal\file\FileInterface|null $file*/
+              $file = \Drupal::entityTypeManager()
+                ->getStorage('file')
+                ->load($fileArray[0]['target_id']);
+              $filename = $file->getFilename();
+            }
+        }
+
         $row = [];
         $column = [
           'data' => [
@@ -158,6 +174,13 @@ class MediaRevisionController extends ControllerBase {
         $this->renderer->addCacheableDependency($column['data'], $username);
         $row[] = $column;
 
+        // Add the filename column.
+        $row[] = [
+          'data' => [
+            '#markup' => $filename,
+          ],
+        ];
+
         if ($isCurrentRevision) {
           $row[] = [
             'data' => [
